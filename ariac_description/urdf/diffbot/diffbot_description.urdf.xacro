<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="diffbot" params="prefix">

  <!-- Constants for robot dimensions -->
  <xacro:property name="base_mass" value="1.5" /> <!-- arbitrary value for base mass -->
  <xacro:property name="base_width" value="0.2" />
  <xacro:property name="base_length" value="0.4" />
  <xacro:property name="base_height" value="0.1" />
  <xacro:property name="wheel_mass" value="2" /> <!-- arbitrary value for wheel mass -->
  <xacro:property name="wheel_radius" value="0.05" />

  <!-- Base Link -->
  <link name="${prefix}base">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </visual>

    <inertial>
      <origin xyz="0 0 ${base_height + wheel_radius}" rpy="0 0 0"/>
      <mass value="${base_mass}"/>
      <inertia
        ixx="${(1/12) * base_mass * (base_height*base_height) + (base_length*base_length)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(1/12) * base_mass * (base_height*base_height) + (base_width*base_width)}"
        iyz="0.0"
        izz="${(1/12) * base_mass * (base_width*base_width) + (base_length*base_length)}"/>
    </inertial>
  </link>


  <!-- right wheel Link -->
  <link name="${prefix}right_wheel">
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        iyz="0.0"
        izz="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"/>
    </inertial>
  </link>

  <joint name="${prefix}right_wheel_joint" type="continuous">
    <origin xyz="${base_length/2 - wheel_radius} ${-base_width/2 } ${-base_height/2}" rpy="0 0 0"/>
    <parent link="${prefix}base"/>
    <child link="${prefix}right_wheel"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.2"/>
  </joint>


  <!-- left wheel Link -->
  <link name="${prefix}left_wheel">
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <mass value="${wheel_mass}"/>
      <inertia 
        ixx="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        iyz="0.0"
        izz="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"/>
    </inertial>
  </link>

  <joint name="${prefix}left_wheel_joint" type="continuous">
    <origin xyz="${base_length/2 - wheel_radius} ${base_width/2} ${-base_height/2}" rpy="0 0 0"/>
    <parent link="${prefix}base"/>
    <child link="${prefix}left_wheel"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.2"/>
  </joint>

  <!-- caster frontal wheel Link -->
  <link name="${prefix}caster">
    <collision>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
    </collision>

    <visual>
      <geometry>
        <sphere radius="${wheel_radius}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <mass value="0.005"/>
      <inertia 
        ixx="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        ixy="0.0"
        ixz="0.0"
        iyy="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"
        iyz="0.0"
        izz="${(2/5) * wheel_mass * (wheel_radius*wheel_radius)}"/>
    </inertial>
  </link>

  <joint name="${prefix}caster_joint" type="fixed">
    <origin xyz="${-base_length/2 + wheel_radius} 0 ${-base_height/2}" rpy="0 0 0"/>
    <parent link="${prefix}base"/>
    <child link="${prefix}caster"/>
  </joint>

  </xacro:macro>

</robot>
